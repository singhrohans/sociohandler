/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PostMsg.java
 *
 * Created on Jul 7, 2012, 1:59:07 PM
 */
package org.ron.view;

import com.restfb.DefaultFacebookClient;
import com.restfb.FacebookClient;
import com.restfb.Parameter;
import com.restfb.types.FacebookType;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.auth.RequestToken;
import twitter4j.conf.ConfigurationBuilder;

/**
 *
 * @author ron
 */
public class PostMsg extends javax.swing.JFrame {

    public static String username = "chatterjee_ria@hotmail.com";
    public static String password = "villa@10";
    public static String FbAccessToken = "AAACEdEose0cBAM31gVU9iO81RWtlNVQ3bWVeDaSNo1CVBLhVBMBmf1UaW2Oet8AqlmJOHSUVZBQnJu0ZA9eBrgZACob9Cbya9nDitoeD3eUtZCjh8Uyp";
    public static String twitterToken="630130092-Wq07ubmkPSKjgT2XWkMyiqqkxudmCfBiN1jDKOCt";
    public static String twitterOuthConsumerKey="BwPTPrKXckHr5Jyh4Pig";
    public static String twitterOAuthConsumerSecret="FSxVAz16sb8rQsntcncXrD5vECxMrET6xAMrhp78s";
    public static String twitterOAuthAccessTokenSecret="V0KMXZC2ZelxZt1pAf1Rrz0ILOJRHMBBkuj4vsNwac";
    private static final long serialVersionUID = 1L;

    /** Creates new form PostMsg */
    public PostMsg() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        editPane = new javax.swing.JEditorPane();
        jButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(editPane);

        jButton.setText("POST");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    PostMsg postMsg = new PostMsg();
                    postMsg.setTitle("Social Client");
                    postMsg.setResizable(false);
                    postMsg.setLocation(new Point(500, 200));
                    postMsg.setVisible(true);
                    postMsg.action();

                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(PostMsg.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(PostMsg.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(PostMsg.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(PostMsg.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public void action() {
        editPane.setBackground(Color.WHITE);
        jButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent ae) {
                try {
                    postFbMessage();
                } catch (Exception ex) {
                    Logger.getLogger(PostMsg.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        editPane.addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent ke) {
                if (ke.getKeyCode() == KeyEvent.VK_ENTER && ke.getModifiers() == KeyEvent.CTRL_MASK) {
                    try {
                        postFbMessage();
                    } catch (Exception ex) {
                        Logger.getLogger(PostMsg.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
    }

    public void postFbMessage() throws TwitterException {
//        FacebookClient client = new DefaultFacebookClient(FbAccessToken);
//        FacebookType publishMessageResponse =client.publish("me/feed", FacebookType.class,Parameter.with("message",editPane.getText()));
//        JOptionPane.showMessageDialog(this,"Published message ID: " + publishMessageResponse.getId());

        ConfigurationBuilder builder=new ConfigurationBuilder();
        builder.setDebugEnabled(true);
        builder.setOAuthConsumerKey(twitterOuthConsumerKey);
        builder.setOAuthConsumerSecret(twitterOAuthConsumerSecret);
        builder.setOAuthAccessToken(twitterToken);
        builder.setOAuthAccessTokenSecret(twitterOAuthAccessTokenSecret);
        builder.setUser(username);
        builder.setPassword(password);

        TwitterFactory tf=new TwitterFactory(builder.build());
        Twitter twitter=tf.getInstance();
        try {
            twitter.updateStatus(editPane.getText());
        } catch (TwitterException ex) {
            Logger.getLogger(PostMsg.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane editPane;
    private javax.swing.JButton jButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
